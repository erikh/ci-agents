// Code generated with goa v3.2.6, DO NOT EDIT.
//
// logsvc protocol buffer definition
//
// Command:
// $ goa gen github.com/tinyci/ci-agents/design

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: logsvc.proto

package logsvcpb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PutRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Time of log entry
	At int64 `protobuf:"zigzag64,1,opt,name=at,proto3" json:"at,omitempty"`
	// Level of log entry; one of debug, info, error
	Level string `protobuf:"bytes,2,opt,name=level,proto3" json:"level,omitempty"`
	// Log fields to tag message with
	Fields map[string]string `protobuf:"bytes,3,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Service providing the log message
	Service_ string `protobuf:"bytes,4,opt,name=service_,json=service,proto3" json:"service_,omitempty"`
	// Actual log message
	Message_ string `protobuf:"bytes,5,opt,name=message_,json=message,proto3" json:"message_,omitempty"`
}

func (x *PutRequest) Reset() {
	*x = PutRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logsvc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutRequest) ProtoMessage() {}

func (x *PutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logsvc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutRequest.ProtoReflect.Descriptor instead.
func (*PutRequest) Descriptor() ([]byte, []int) {
	return file_logsvc_proto_rawDescGZIP(), []int{0}
}

func (x *PutRequest) GetAt() int64 {
	if x != nil {
		return x.At
	}
	return 0
}

func (x *PutRequest) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *PutRequest) GetFields() map[string]string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *PutRequest) GetService_() string {
	if x != nil {
		return x.Service_
	}
	return ""
}

func (x *PutRequest) GetMessage_() string {
	if x != nil {
		return x.Message_
	}
	return ""
}

type PutResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PutResponse) Reset() {
	*x = PutResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logsvc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutResponse) ProtoMessage() {}

func (x *PutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_logsvc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutResponse.ProtoReflect.Descriptor instead.
func (*PutResponse) Descriptor() ([]byte, []int) {
	return file_logsvc_proto_rawDescGZIP(), []int{1}
}

var File_logsvc_proto protoreflect.FileDescriptor

var file_logsvc_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x6c, 0x6f, 0x67, 0x73, 0x76, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x6c, 0x6f, 0x67, 0x73, 0x76, 0x63, 0x22, 0xdb, 0x01, 0x0a, 0x0a, 0x50, 0x75, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x12, 0x52, 0x02, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x36, 0x0a, 0x06, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6c, 0x6f,
	0x67, 0x73, 0x76, 0x63, 0x2e, 0x50, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x39, 0x0a, 0x0b, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x0d, 0x0a, 0x0b, 0x50, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x32, 0x38, 0x0a, 0x06, 0x4c, 0x6f, 0x67, 0x73, 0x76, 0x63, 0x12, 0x2e, 0x0a,
	0x03, 0x50, 0x75, 0x74, 0x12, 0x12, 0x2e, 0x6c, 0x6f, 0x67, 0x73, 0x76, 0x63, 0x2e, 0x50, 0x75,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x6c, 0x6f, 0x67, 0x73, 0x76,
	0x63, 0x2e, 0x50, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0a, 0x5a,
	0x08, 0x6c, 0x6f, 0x67, 0x73, 0x76, 0x63, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_logsvc_proto_rawDescOnce sync.Once
	file_logsvc_proto_rawDescData = file_logsvc_proto_rawDesc
)

func file_logsvc_proto_rawDescGZIP() []byte {
	file_logsvc_proto_rawDescOnce.Do(func() {
		file_logsvc_proto_rawDescData = protoimpl.X.CompressGZIP(file_logsvc_proto_rawDescData)
	})
	return file_logsvc_proto_rawDescData
}

var file_logsvc_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_logsvc_proto_goTypes = []interface{}{
	(*PutRequest)(nil),  // 0: logsvc.PutRequest
	(*PutResponse)(nil), // 1: logsvc.PutResponse
	nil,                 // 2: logsvc.PutRequest.FieldsEntry
}
var file_logsvc_proto_depIdxs = []int32{
	2, // 0: logsvc.PutRequest.fields:type_name -> logsvc.PutRequest.FieldsEntry
	0, // 1: logsvc.Logsvc.Put:input_type -> logsvc.PutRequest
	1, // 2: logsvc.Logsvc.Put:output_type -> logsvc.PutResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_logsvc_proto_init() }
func file_logsvc_proto_init() {
	if File_logsvc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_logsvc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logsvc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_logsvc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_logsvc_proto_goTypes,
		DependencyIndexes: file_logsvc_proto_depIdxs,
		MessageInfos:      file_logsvc_proto_msgTypes,
	}.Build()
	File_logsvc_proto = out.File
	file_logsvc_proto_rawDesc = nil
	file_logsvc_proto_goTypes = nil
	file_logsvc_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LogsvcClient is the client API for Logsvc service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LogsvcClient interface {
	// Put implements put.
	Put(ctx context.Context, in *PutRequest, opts ...grpc.CallOption) (*PutResponse, error)
}

type logsvcClient struct {
	cc grpc.ClientConnInterface
}

func NewLogsvcClient(cc grpc.ClientConnInterface) LogsvcClient {
	return &logsvcClient{cc}
}

func (c *logsvcClient) Put(ctx context.Context, in *PutRequest, opts ...grpc.CallOption) (*PutResponse, error) {
	out := new(PutResponse)
	err := c.cc.Invoke(ctx, "/logsvc.Logsvc/Put", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LogsvcServer is the server API for Logsvc service.
type LogsvcServer interface {
	// Put implements put.
	Put(context.Context, *PutRequest) (*PutResponse, error)
}

// UnimplementedLogsvcServer can be embedded to have forward compatible implementations.
type UnimplementedLogsvcServer struct {
}

func (*UnimplementedLogsvcServer) Put(context.Context, *PutRequest) (*PutResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Put not implemented")
}

func RegisterLogsvcServer(s *grpc.Server, srv LogsvcServer) {
	s.RegisterService(&_Logsvc_serviceDesc, srv)
}

func _Logsvc_Put_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogsvcServer).Put(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/logsvc.Logsvc/Put",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogsvcServer).Put(ctx, req.(*PutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Logsvc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "logsvc.Logsvc",
	HandlerType: (*LogsvcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Put",
			Handler:    _Logsvc_Put_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "logsvc.proto",
}
