// Code generated with goa v3.2.6, DO NOT EDIT.
//
// assetsvc protocol buffer definition
//
// Command:
// $ goa gen github.com/tinyci/ci-agents/design

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: assetsvc.proto

package assetsvcpb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PutLogStreamingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Run identitfier
	Id    int64  `protobuf:"zigzag64,1,opt,name=id,proto3" json:"id,omitempty"`
	Chunk []byte `protobuf:"bytes,2,opt,name=chunk,proto3" json:"chunk,omitempty"`
}

func (x *PutLogStreamingRequest) Reset() {
	*x = PutLogStreamingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assetsvc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutLogStreamingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutLogStreamingRequest) ProtoMessage() {}

func (x *PutLogStreamingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_assetsvc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutLogStreamingRequest.ProtoReflect.Descriptor instead.
func (*PutLogStreamingRequest) Descriptor() ([]byte, []int) {
	return file_assetsvc_proto_rawDescGZIP(), []int{0}
}

func (x *PutLogStreamingRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PutLogStreamingRequest) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

type PutLogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PutLogResponse) Reset() {
	*x = PutLogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assetsvc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutLogResponse) ProtoMessage() {}

func (x *PutLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_assetsvc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutLogResponse.ProtoReflect.Descriptor instead.
func (*PutLogResponse) Descriptor() ([]byte, []int) {
	return file_assetsvc_proto_rawDescGZIP(), []int{1}
}

type GetLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Run identitfier
	Id int64 `protobuf:"zigzag64,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetLogRequest) Reset() {
	*x = GetLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assetsvc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogRequest) ProtoMessage() {}

func (x *GetLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_assetsvc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLogRequest.ProtoReflect.Descriptor instead.
func (*GetLogRequest) Descriptor() ([]byte, []int) {
	return file_assetsvc_proto_rawDescGZIP(), []int{2}
}

func (x *GetLogRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetLogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chunk  []byte   `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`
	Errors []string `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty"`
}

func (x *GetLogResponse) Reset() {
	*x = GetLogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assetsvc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogResponse) ProtoMessage() {}

func (x *GetLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_assetsvc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLogResponse.ProtoReflect.Descriptor instead.
func (*GetLogResponse) Descriptor() ([]byte, []int) {
	return file_assetsvc_proto_rawDescGZIP(), []int{3}
}

func (x *GetLogResponse) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

func (x *GetLogResponse) GetErrors() []string {
	if x != nil {
		return x.Errors
	}
	return nil
}

var File_assetsvc_proto protoreflect.FileDescriptor

var file_assetsvc_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x76, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x76, 0x63, 0x22, 0x3e, 0x0a, 0x16, 0x50, 0x75,
	0x74, 0x4c, 0x6f, 0x67, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x22, 0x10, 0x0a, 0x0e, 0x50, 0x75,
	0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3e, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05,
	0x63, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x32, 0x91, 0x01,
	0x0a, 0x08, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x76, 0x63, 0x12, 0x46, 0x0a, 0x06, 0x50, 0x75,
	0x74, 0x4c, 0x6f, 0x67, 0x12, 0x20, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x76, 0x63, 0x2e,
	0x50, 0x75, 0x74, 0x4c, 0x6f, 0x67, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x76,
	0x63, 0x2e, 0x50, 0x75, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x28, 0x01, 0x12, 0x3d, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x12, 0x17, 0x2e, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x73, 0x76, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x76, 0x63,
	0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30,
	0x01, 0x42, 0x0c, 0x5a, 0x0a, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x76, 0x63, 0x70, 0x62, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_assetsvc_proto_rawDescOnce sync.Once
	file_assetsvc_proto_rawDescData = file_assetsvc_proto_rawDesc
)

func file_assetsvc_proto_rawDescGZIP() []byte {
	file_assetsvc_proto_rawDescOnce.Do(func() {
		file_assetsvc_proto_rawDescData = protoimpl.X.CompressGZIP(file_assetsvc_proto_rawDescData)
	})
	return file_assetsvc_proto_rawDescData
}

var file_assetsvc_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_assetsvc_proto_goTypes = []interface{}{
	(*PutLogStreamingRequest)(nil), // 0: assetsvc.PutLogStreamingRequest
	(*PutLogResponse)(nil),         // 1: assetsvc.PutLogResponse
	(*GetLogRequest)(nil),          // 2: assetsvc.GetLogRequest
	(*GetLogResponse)(nil),         // 3: assetsvc.GetLogResponse
}
var file_assetsvc_proto_depIdxs = []int32{
	0, // 0: assetsvc.Assetsvc.PutLog:input_type -> assetsvc.PutLogStreamingRequest
	2, // 1: assetsvc.Assetsvc.GetLog:input_type -> assetsvc.GetLogRequest
	1, // 2: assetsvc.Assetsvc.PutLog:output_type -> assetsvc.PutLogResponse
	3, // 3: assetsvc.Assetsvc.GetLog:output_type -> assetsvc.GetLogResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_assetsvc_proto_init() }
func file_assetsvc_proto_init() {
	if File_assetsvc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_assetsvc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutLogStreamingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assetsvc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutLogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assetsvc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assetsvc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_assetsvc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_assetsvc_proto_goTypes,
		DependencyIndexes: file_assetsvc_proto_depIdxs,
		MessageInfos:      file_assetsvc_proto_msgTypes,
	}.Build()
	File_assetsvc_proto = out.File
	file_assetsvc_proto_rawDesc = nil
	file_assetsvc_proto_goTypes = nil
	file_assetsvc_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AssetsvcClient is the client API for Assetsvc service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AssetsvcClient interface {
	// PutLog implements putLog.
	PutLog(ctx context.Context, opts ...grpc.CallOption) (Assetsvc_PutLogClient, error)
	// GetLog implements getLog.
	GetLog(ctx context.Context, in *GetLogRequest, opts ...grpc.CallOption) (Assetsvc_GetLogClient, error)
}

type assetsvcClient struct {
	cc grpc.ClientConnInterface
}

func NewAssetsvcClient(cc grpc.ClientConnInterface) AssetsvcClient {
	return &assetsvcClient{cc}
}

func (c *assetsvcClient) PutLog(ctx context.Context, opts ...grpc.CallOption) (Assetsvc_PutLogClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Assetsvc_serviceDesc.Streams[0], "/assetsvc.Assetsvc/PutLog", opts...)
	if err != nil {
		return nil, err
	}
	x := &assetsvcPutLogClient{stream}
	return x, nil
}

type Assetsvc_PutLogClient interface {
	Send(*PutLogStreamingRequest) error
	CloseAndRecv() (*PutLogResponse, error)
	grpc.ClientStream
}

type assetsvcPutLogClient struct {
	grpc.ClientStream
}

func (x *assetsvcPutLogClient) Send(m *PutLogStreamingRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *assetsvcPutLogClient) CloseAndRecv() (*PutLogResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(PutLogResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *assetsvcClient) GetLog(ctx context.Context, in *GetLogRequest, opts ...grpc.CallOption) (Assetsvc_GetLogClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Assetsvc_serviceDesc.Streams[1], "/assetsvc.Assetsvc/GetLog", opts...)
	if err != nil {
		return nil, err
	}
	x := &assetsvcGetLogClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Assetsvc_GetLogClient interface {
	Recv() (*GetLogResponse, error)
	grpc.ClientStream
}

type assetsvcGetLogClient struct {
	grpc.ClientStream
}

func (x *assetsvcGetLogClient) Recv() (*GetLogResponse, error) {
	m := new(GetLogResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// AssetsvcServer is the server API for Assetsvc service.
type AssetsvcServer interface {
	// PutLog implements putLog.
	PutLog(Assetsvc_PutLogServer) error
	// GetLog implements getLog.
	GetLog(*GetLogRequest, Assetsvc_GetLogServer) error
}

// UnimplementedAssetsvcServer can be embedded to have forward compatible implementations.
type UnimplementedAssetsvcServer struct {
}

func (*UnimplementedAssetsvcServer) PutLog(Assetsvc_PutLogServer) error {
	return status.Errorf(codes.Unimplemented, "method PutLog not implemented")
}
func (*UnimplementedAssetsvcServer) GetLog(*GetLogRequest, Assetsvc_GetLogServer) error {
	return status.Errorf(codes.Unimplemented, "method GetLog not implemented")
}

func RegisterAssetsvcServer(s *grpc.Server, srv AssetsvcServer) {
	s.RegisterService(&_Assetsvc_serviceDesc, srv)
}

func _Assetsvc_PutLog_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(AssetsvcServer).PutLog(&assetsvcPutLogServer{stream})
}

type Assetsvc_PutLogServer interface {
	SendAndClose(*PutLogResponse) error
	Recv() (*PutLogStreamingRequest, error)
	grpc.ServerStream
}

type assetsvcPutLogServer struct {
	grpc.ServerStream
}

func (x *assetsvcPutLogServer) SendAndClose(m *PutLogResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *assetsvcPutLogServer) Recv() (*PutLogStreamingRequest, error) {
	m := new(PutLogStreamingRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Assetsvc_GetLog_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetLogRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(AssetsvcServer).GetLog(m, &assetsvcGetLogServer{stream})
}

type Assetsvc_GetLogServer interface {
	Send(*GetLogResponse) error
	grpc.ServerStream
}

type assetsvcGetLogServer struct {
	grpc.ServerStream
}

func (x *assetsvcGetLogServer) Send(m *GetLogResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _Assetsvc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "assetsvc.Assetsvc",
	HandlerType: (*AssetsvcServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PutLog",
			Handler:       _Assetsvc_PutLog_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "GetLog",
			Handler:       _Assetsvc_GetLog_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "assetsvc.proto",
}
