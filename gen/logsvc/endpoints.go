// Code generated by goa v3.2.6, DO NOT EDIT.
//
// logsvc endpoints
//
// Command:
// $ goa gen github.com/tinyci/ci-agents/design

package logsvc

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "logsvc" service endpoints.
type Endpoints struct {
	Put goa.Endpoint
}

// NewEndpoints wraps the methods of the "logsvc" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		Put: NewPutEndpoint(s),
	}
}

// Use applies the given middleware to all the "logsvc" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.Put = m(e.Put)
}

// NewPutEndpoint returns an endpoint function that calls the method "put" of
// service "logsvc".
func NewPutEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*PutPayload)
		return nil, s.Put(ctx, p)
	}
}
