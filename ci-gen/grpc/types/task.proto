syntax = "proto3";

package types;

option go_package = "github.com/tinyci/ci-agents/ci-gen/grpc/types";

import "github.com/golang/protobuf/ptypes/timestamp/timestamp.proto";
import "github.com/golang/protobuf/ptypes/struct/struct.proto";

import "github.com/tinyci/ci-agents/ci-gen/grpc/types/repository.proto";
import "github.com/tinyci/ci-agents/ci-gen/grpc/types/ref.proto";
import "github.com/tinyci/ci-agents/ci-gen/grpc/types/run_settings.proto";

// Task corresponds to directories within the tree that have a `task.yml`
// placed in them. Each task is decomposed into runs, and this record is
// created indicating the group of them, as well as properties they share.
message Task {
  int64                     id            = 1; // ID of the task
  types.Repository          parent        = 2; // Parent Repository
  types.Ref                 ref           = 3; // Associated Ref to be tested
  string                    baseSHA       = 4; // BaseSHA for diff
  int64                     pullRequestID = 5; // A pull request ID for PR events; 0 otherwise
  bool                      canceled      = 6; // Was the run canceled?
  google.protobuf.Timestamp finishedAt    = 7; // When did it finish?
  google.protobuf.Timestamp createdAt     = 8; // When was it created?
  google.protobuf.Timestamp startedAt     = 9; // When did it start
  bool                      status        = 10; // What is the status?
  bool                      statusSet     = 11; // Is the status valid?
  TaskSettings              settings      = 12; // TaskSettings associated with the task (parsed task.yml)
  string                    path          = 13; // dirname of the task.yml
}

// TaskSettings is the parsed representation to struct of task.yml files.
message TaskSettings {
            string                          mountpoint      = 1; // Mountpoint to use for the source code inside the container
  repeated  string                          env             = 2; // Environment variables -- in environ syntax.
            string                          workdir         = 3; // Working dir inside the container; defaults to mountpoint
            map<string, types.RunSettings>  runs            = 4; // Map of run name -> run settings, used for defining runs to create
            int64                           defaultTimeout  = 5; // Default Timeout if none is specified
            string                          defaultQueue    = 6; // Default Queue is none is specified; otherwise this is 'default'
            string                          defaultImage    = 7; // Default Image to use in runs.
            google.protobuf.Struct          metadata        = 8; // Free-form metadata to be returned to runners.
  repeated  string                          dependencies    = 9; // Dependency list.
}

// TaskList is simply a repeated list of tasks.
message TaskList {
  repeated Task Tasks = 1; // List of tasks
}

// CancelPRRequest is used in CancelTasksByPR in the datasvc; can be used to
// cancel all runs for a PR.
message CancelPRRequest {
  int64   id          = 1;
  string  repository  = 2;
}
