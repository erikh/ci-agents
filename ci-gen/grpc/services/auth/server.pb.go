// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpc/services/auth/server.proto

package auth

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	types "github.com/tinyci/ci-agents/ci-gen/grpc/types"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type String struct {
	Str                  string   `protobuf:"bytes,1,opt,name=str,proto3" json:"str,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *String) Reset()         { *m = String{} }
func (m *String) String() string { return proto.CompactTextString(m) }
func (*String) ProtoMessage()    {}
func (*String) Descriptor() ([]byte, []int) {
	return fileDescriptor_4a8532874a13acd1, []int{0}
}

func (m *String) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_String.Unmarshal(m, b)
}
func (m *String) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_String.Marshal(b, m, deterministic)
}
func (m *String) XXX_Merge(src proto.Message) {
	xxx_messageInfo_String.Merge(m, src)
}
func (m *String) XXX_Size() int {
	return xxx_messageInfo_String.Size(m)
}
func (m *String) XXX_DiscardUnknown() {
	xxx_messageInfo_String.DiscardUnknown(m)
}

var xxx_messageInfo_String proto.InternalMessageInfo

func (m *String) GetStr() string {
	if m != nil {
		return m.Str
	}
	return ""
}

type Scopes struct {
	List                 []string `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Scopes) Reset()         { *m = Scopes{} }
func (m *Scopes) String() string { return proto.CompactTextString(m) }
func (*Scopes) ProtoMessage()    {}
func (*Scopes) Descriptor() ([]byte, []int) {
	return fileDescriptor_4a8532874a13acd1, []int{1}
}

func (m *Scopes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Scopes.Unmarshal(m, b)
}
func (m *Scopes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Scopes.Marshal(b, m, deterministic)
}
func (m *Scopes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Scopes.Merge(m, src)
}
func (m *Scopes) XXX_Size() int {
	return xxx_messageInfo_Scopes.Size(m)
}
func (m *Scopes) XXX_DiscardUnknown() {
	xxx_messageInfo_Scopes.DiscardUnknown(m)
}

var xxx_messageInfo_Scopes proto.InternalMessageInfo

func (m *Scopes) GetList() []string {
	if m != nil {
		return m.List
	}
	return nil
}

type OAuthChallengeRequest struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Scopes               []string `protobuf:"bytes,2,rep,name=scopes,proto3" json:"scopes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OAuthChallengeRequest) Reset()         { *m = OAuthChallengeRequest{} }
func (m *OAuthChallengeRequest) String() string { return proto.CompactTextString(m) }
func (*OAuthChallengeRequest) ProtoMessage()    {}
func (*OAuthChallengeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4a8532874a13acd1, []int{2}
}

func (m *OAuthChallengeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OAuthChallengeRequest.Unmarshal(m, b)
}
func (m *OAuthChallengeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OAuthChallengeRequest.Marshal(b, m, deterministic)
}
func (m *OAuthChallengeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OAuthChallengeRequest.Merge(m, src)
}
func (m *OAuthChallengeRequest) XXX_Size() int {
	return xxx_messageInfo_OAuthChallengeRequest.Size(m)
}
func (m *OAuthChallengeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OAuthChallengeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OAuthChallengeRequest proto.InternalMessageInfo

func (m *OAuthChallengeRequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *OAuthChallengeRequest) GetScopes() []string {
	if m != nil {
		return m.Scopes
	}
	return nil
}

func init() {
	proto.RegisterType((*String)(nil), "auth.String")
	proto.RegisterType((*Scopes)(nil), "auth.Scopes")
	proto.RegisterType((*OAuthChallengeRequest)(nil), "auth.OAuthChallengeRequest")
}

func init() { proto.RegisterFile("grpc/services/auth/server.proto", fileDescriptor_4a8532874a13acd1) }

var fileDescriptor_4a8532874a13acd1 = []byte{
	// 268 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x90, 0xc1, 0x4b, 0xf3, 0x40,
	0x10, 0xc5, 0x9b, 0xaf, 0x21, 0xd0, 0xed, 0x87, 0xc8, 0x82, 0x12, 0xa2, 0x60, 0xc9, 0xa9, 0x20,
	0xee, 0x82, 0x22, 0x7a, 0xf0, 0xa2, 0x3d, 0x78, 0x11, 0x84, 0x94, 0x5e, 0xbc, 0xa5, 0xeb, 0xb0,
	0x59, 0x88, 0x49, 0xba, 0x33, 0x2b, 0xf4, 0xbf, 0x97, 0x9d, 0xb6, 0x87, 0x82, 0x07, 0x6f, 0xef,
	0x2d, 0x33, 0xbf, 0x9d, 0xf7, 0xc4, 0x95, 0xf5, 0x83, 0xd1, 0x08, 0xfe, 0xdb, 0x19, 0x40, 0x5d,
	0x07, 0x6a, 0xd8, 0x81, 0x57, 0x83, 0xef, 0xa9, 0x97, 0x69, 0x7c, 0x2a, 0x1e, 0xad, 0xa3, 0x26,
	0xac, 0x95, 0xe9, 0xbf, 0x34, 0xb9, 0x6e, 0x6b, 0x9c, 0x36, 0xee, 0xa6, 0xb6, 0xd0, 0x11, 0x46,
	0x65, 0xa1, 0xd3, 0x4c, 0xa2, 0xed, 0x00, 0xa8, 0x03, 0x1e, 0xf6, 0xcb, 0x42, 0x64, 0x4b, 0xf2,
	0xae, 0xb3, 0xf2, 0x54, 0x8c, 0x91, 0x7c, 0x9e, 0xcc, 0x92, 0xf9, 0xa4, 0x8a, 0xb2, 0xbc, 0x14,
	0xd9, 0xd2, 0xf4, 0x03, 0xa0, 0x94, 0x22, 0x6d, 0x1d, 0x52, 0x9e, 0xcc, 0xc6, 0xf3, 0x49, 0xc5,
	0xba, 0x5c, 0x88, 0xb3, 0xf7, 0xe7, 0x40, 0xcd, 0xa2, 0xa9, 0xdb, 0x16, 0x3a, 0x0b, 0x15, 0x6c,
	0x02, 0x20, 0xc5, 0x61, 0xd3, 0x7f, 0xc2, 0x9e, 0xc4, 0x5a, 0x9e, 0x8b, 0x0c, 0x19, 0x95, 0xff,
	0x63, 0xc4, 0xde, 0xdd, 0x6e, 0x44, 0x1a, 0x19, 0xf2, 0x49, 0x9c, 0x1c, 0xc3, 0xe4, 0x85, 0x8a,
	0xc9, 0xd4, 0xaf, 0x5f, 0x14, 0x53, 0xc5, 0x41, 0xd4, 0x0a, 0xc1, 0x97, 0x23, 0x79, 0x2d, 0xa6,
	0xaf, 0x40, 0x3c, 0xba, 0xaa, 0xde, 0xe4, 0xff, 0xdd, 0xea, 0xee, 0xf6, 0xe2, 0xe0, 0x38, 0x65,
	0x39, 0x7a, 0x79, 0xf8, 0xb8, 0xff, 0x6b, 0x5b, 0x47, 0xbd, 0xaf, 0x33, 0x6e, 0xec, 0xee, 0x27,
	0x00, 0x00, 0xff, 0xff, 0xee, 0xd6, 0x7a, 0x4c, 0x94, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AuthClient is the client API for Auth service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthClient interface {
	OAuthChallenge(ctx context.Context, in *OAuthChallengeRequest, opts ...grpc.CallOption) (*types.User, error)
	GetOAuthURL(ctx context.Context, in *Scopes, opts ...grpc.CallOption) (*String, error)
}

type authClient struct {
	cc *grpc.ClientConn
}

func NewAuthClient(cc *grpc.ClientConn) AuthClient {
	return &authClient{cc}
}

func (c *authClient) OAuthChallenge(ctx context.Context, in *OAuthChallengeRequest, opts ...grpc.CallOption) (*types.User, error) {
	out := new(types.User)
	err := c.cc.Invoke(ctx, "/auth.Auth/OAuthChallenge", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) GetOAuthURL(ctx context.Context, in *Scopes, opts ...grpc.CallOption) (*String, error) {
	out := new(String)
	err := c.cc.Invoke(ctx, "/auth.Auth/GetOAuthURL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthServer is the server API for Auth service.
type AuthServer interface {
	OAuthChallenge(context.Context, *OAuthChallengeRequest) (*types.User, error)
	GetOAuthURL(context.Context, *Scopes) (*String, error)
}

// UnimplementedAuthServer can be embedded to have forward compatible implementations.
type UnimplementedAuthServer struct {
}

func (*UnimplementedAuthServer) OAuthChallenge(ctx context.Context, req *OAuthChallengeRequest) (*types.User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OAuthChallenge not implemented")
}
func (*UnimplementedAuthServer) GetOAuthURL(ctx context.Context, req *Scopes) (*String, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOAuthURL not implemented")
}

func RegisterAuthServer(s *grpc.Server, srv AuthServer) {
	s.RegisterService(&_Auth_serviceDesc, srv)
}

func _Auth_OAuthChallenge_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OAuthChallengeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).OAuthChallenge(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth.Auth/OAuthChallenge",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).OAuthChallenge(ctx, req.(*OAuthChallengeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_GetOAuthURL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Scopes)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).GetOAuthURL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth.Auth/GetOAuthURL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).GetOAuthURL(ctx, req.(*Scopes))
	}
	return interceptor(ctx, in, info, handler)
}

var _Auth_serviceDesc = grpc.ServiceDesc{
	ServiceName: "auth.Auth",
	HandlerType: (*AuthServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "OAuthChallenge",
			Handler:    _Auth_OAuthChallenge_Handler,
		},
		{
			MethodName: "GetOAuthURL",
			Handler:    _Auth_GetOAuthURL_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpc/services/auth/server.proto",
}
