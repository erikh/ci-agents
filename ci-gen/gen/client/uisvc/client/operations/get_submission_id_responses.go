// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/tinyci/ci-agents/ci-gen/gen/client/uisvc/models"
)

// GetSubmissionIDReader is a Reader for the GetSubmissionID structure.
type GetSubmissionIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSubmissionIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetSubmissionIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 500:
		result := NewGetSubmissionIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetSubmissionIDOK creates a GetSubmissionIDOK with default headers values
func NewGetSubmissionIDOK() *GetSubmissionIDOK {
	return &GetSubmissionIDOK{}
}

/*GetSubmissionIDOK handles this case with default header values.

OK
*/
type GetSubmissionIDOK struct {
	Payload *models.ModelSubmission
}

func (o *GetSubmissionIDOK) Error() string {
	return fmt.Sprintf("[GET /submission/{id}][%d] getSubmissionIdOK  %+v", 200, o.Payload) // #nosec
}

func (o *GetSubmissionIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelSubmission)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSubmissionIDInternalServerError creates a GetSubmissionIDInternalServerError with default headers values
func NewGetSubmissionIDInternalServerError() *GetSubmissionIDInternalServerError {
	return &GetSubmissionIDInternalServerError{}
}

/*GetSubmissionIDInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetSubmissionIDInternalServerError struct {
	Payload *models.Error
}

func (o *GetSubmissionIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /submission/{id}][%d] getSubmissionIdInternalServerError  %+v", 500, o.Payload) // #nosec
}

func (o *GetSubmissionIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
