// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/tinyci/ci-agents/ci-gen/gen/client/uisvc/models"
)

// GetRepositoriesMyReader is a Reader for the GetRepositoriesMy structure.
type GetRepositoriesMyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRepositoriesMyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetRepositoriesMyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 500:
		result := NewGetRepositoriesMyInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetRepositoriesMyOK creates a GetRepositoriesMyOK with default headers values
func NewGetRepositoriesMyOK() *GetRepositoriesMyOK {
	return &GetRepositoriesMyOK{}
}

/*GetRepositoriesMyOK handles this case with default header values.

OK
*/
type GetRepositoriesMyOK struct {
	Payload models.RepositoryList
}

func (o *GetRepositoriesMyOK) Error() string {
	return fmt.Sprintf("[GET /repositories/my][%d] getRepositoriesMyOK  %+v", 200, o.Payload) // #nosec
}

func (o *GetRepositoriesMyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRepositoriesMyInternalServerError creates a GetRepositoriesMyInternalServerError with default headers values
func NewGetRepositoriesMyInternalServerError() *GetRepositoriesMyInternalServerError {
	return &GetRepositoriesMyInternalServerError{}
}

/*GetRepositoriesMyInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetRepositoriesMyInternalServerError struct {
	Payload string
}

func (o *GetRepositoriesMyInternalServerError) Error() string {
	return fmt.Sprintf("[GET /repositories/my][%d] getRepositoriesMyInternalServerError  %+v", 500, o.Payload) // #nosec
}

func (o *GetRepositoriesMyInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
