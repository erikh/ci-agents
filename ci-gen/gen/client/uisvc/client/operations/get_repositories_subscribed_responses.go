// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/tinyci/ci-agents/ci-gen/gen/client/uisvc/models"
)

// GetRepositoriesSubscribedReader is a Reader for the GetRepositoriesSubscribed structure.
type GetRepositoriesSubscribedReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRepositoriesSubscribedReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetRepositoriesSubscribedOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 500:
		result := NewGetRepositoriesSubscribedInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetRepositoriesSubscribedOK creates a GetRepositoriesSubscribedOK with default headers values
func NewGetRepositoriesSubscribedOK() *GetRepositoriesSubscribedOK {
	return &GetRepositoriesSubscribedOK{}
}

/*GetRepositoriesSubscribedOK handles this case with default header values.

OK
*/
type GetRepositoriesSubscribedOK struct {
	Payload models.RepositoryList
}

func (o *GetRepositoriesSubscribedOK) Error() string {
	return fmt.Sprintf("[GET /repositories/subscribed][%d] getRepositoriesSubscribedOK  %+v", 200, o.Payload) // #nosec
}

func (o *GetRepositoriesSubscribedOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRepositoriesSubscribedInternalServerError creates a GetRepositoriesSubscribedInternalServerError with default headers values
func NewGetRepositoriesSubscribedInternalServerError() *GetRepositoriesSubscribedInternalServerError {
	return &GetRepositoriesSubscribedInternalServerError{}
}

/*GetRepositoriesSubscribedInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetRepositoriesSubscribedInternalServerError struct {
	Payload *models.Error
}

func (o *GetRepositoriesSubscribedInternalServerError) Error() string {
	return fmt.Sprintf("[GET /repositories/subscribed][%d] getRepositoriesSubscribedInternalServerError  %+v", 500, o.Payload) // #nosec
}

func (o *GetRepositoriesSubscribedInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
