// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/tinyci/ci-agents/ci-gen/gen/client/uisvc/models"
)

// GetLoginReader is a Reader for the GetLogin structure.
type GetLoginReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLoginReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 302:
		result := NewGetLoginFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetLoginInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetLoginFound creates a GetLoginFound with default headers values
func NewGetLoginFound() *GetLoginFound {
	return &GetLoginFound{}
}

/*GetLoginFound handles this case with default header values.

Redirection to another page indicates success of the login function. Follow the redirection to complete the login process. If the location is "/", that means login was successful.

*/
type GetLoginFound struct {
}

func (o *GetLoginFound) Error() string {
	return fmt.Sprintf("[GET /login][%d] getLoginFound ", 302) // #nosec
}

func (o *GetLoginFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetLoginInternalServerError creates a GetLoginInternalServerError with default headers values
func NewGetLoginInternalServerError() *GetLoginInternalServerError {
	return &GetLoginInternalServerError{}
}

/*GetLoginInternalServerError handles this case with default header values.

An error occurred. Body has error result.
*/
type GetLoginInternalServerError struct {
	Payload *models.Error
}

func (o *GetLoginInternalServerError) Error() string {
	return fmt.Sprintf("[GET /login][%d] getLoginInternalServerError  %+v", 500, o.Payload) // #nosec
}

func (o *GetLoginInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
